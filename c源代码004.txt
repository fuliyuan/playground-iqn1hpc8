//401用户交互.c -- 演示与用户交互
#include <stdio.h>
//提供strlen()计算字符串长度函数的原型
#include <string.h> 
//人体密度（单位：磅/立方英尺）
#define 密度 62.4
int main()
{
    float 重量, 体积;
    int 大小, 长度;
    //name是一个可容纳40个字符的数组
    char 名称[40];
    
    printf("嗨！你的名字是什么？\n");
    scanf("%s", 名称);
    printf("%s，你的磅数是多少？\n", 名称);
    scanf("%f", &重量);
    大小 = sizeof 名称;
    长度 = strlen(名称);
    体积 = 重量 / 密度;
    printf("那么，%s，你的体积是%2.2f立方英尺。\n",
           名称, 体积);
    printf("另外，你的名字有%d个字母，\n",
           长度);
    printf("我们有%d个字节来存储它。\n", 大小);
    
    return 0;
}
﻿//402使用字符串.c -- 使用不同类型的字符串 
#include <stdio.h>
#define 赞美 "你是一个非凡的人。"
int main(void)
{
    char 名称[40];
    
    printf("你叫什么名字？");
    scanf("%s", 名称);
    printf("你好，%s。%s\n", 名称, 赞美);
    
    return 0;
}
﻿//403使用字符串.c
//如果编译器不识别%zd，尝试换成%u或%lu。
#include <stdio.h>
//提供strlen()计算字符串长度函数的原型
#include <string.h>
#define 赞美 "你是一个非凡的人。"
int main(void)
{
    char 名称[40];
    
    printf("你叫什么名字？");
    scanf("%s", 名称);
    printf("你好，%s。%s\n", 名称, 赞美);
    printf("您的名称有%zd个字母并占据%zd个存储器单元格。\n",
           strlen(名称), sizeof(名称));
    printf("赞美词组包含%zd个字母",
           strlen(赞美));
    printf("并占据%zd个存储单元。\n", sizeof(赞美));
    
    return 0;
}
﻿//常量与预处理器.c -- 在比萨饼程序中使用已定义的常量
#include <stdio.h>
#define 圆周率 3.14159
int main(void)
{
    float 面积, 圆周, 半径;
    
    printf("你的披萨的半径是多少？\n");
    scanf("%f", &半径);
    面积 = 圆周率 * 半径 * 半径;
    圆周 = 2.0 * 圆周率 *半径;
    printf("你的基本披萨参数如下：\n");
    printf("圆周 = %1.2f, 面积 = %1.2f\n", 圆周,
           面积);
    return 0;
}
﻿//明示常量.c -- 使用limit.h和float头文件中定义的明示常量
#include <stdio.h>
//整型限制
#include <limits.h>
//浮点型限制
#include <float.h>
int main(void)
{
    printf("这个系统的一些数字限制：\n");
    printf("最大的整数：%d\n", INT_MAX);
    printf("最小的超长整数：%lld\n", LLONG_MIN);
    printf("一个字节=该系统上的%d位。\n", CHAR_BIT);
    printf("最大的高浮点数：%e\n", DBL_MAX);
    printf("最小的低浮点数：%e\n", FLT_MIN);
    printf("浮点精度=%d个数字\n", FLT_DIG);
    printf("浮点小量=%e\n", FLT_EPSILON);
    
    return 0;
}
﻿//406打印输出.c -- 使用转换说明
#include <stdio.h>
#define 圆周率 3.141593
int main(void)
{
    int 号码 = 7;
    float 馅饼 = 12.75;
    int 成本 = 7800;

    
    printf("%d参赛者吃了%f莓果派。\n", 号码,
           馅饼);
    printf("圆周率的值是%f。\n", 圆周率);
    printf("再见！你为我的拥有而亲爱，\n");
    printf("%c%d\n", '$', 2 * 成本);
    
    return 0;
}
﻿//407字段宽度.c -- 字段宽度
#include <stdio.h>
#define 页码 959
int main(void)
{
    printf("*%d*\n", 页码);
    printf("*%2d*\n", 页码);
    printf("*%10d*\n", 页码);
    printf("*%-10d*\n", 页码);
    
    return 0;
}
﻿//408浮点数修饰符组合.c -- 一些浮点型修饰符的组合
#include <stdio.h>

int main(void)
{
    //const限定变量为只读
    const double 出租 = 3852.99;
    
    printf("*%f*\n", 出租);
    printf("*%e*\n", 出租);
    printf("*%4.2f*\n", 出租);
    printf("*%3.1f*\n", 出租);
    printf("*%10.3f*\n", 出租);
    printf("*%10.3E*\n", 出租);
    printf("*%+4.2f*\n", 出租);
    printf("*%010.2f*\n", 出租);
    
    return 0;
}
﻿//409格式标记.c -- 演示一些格式标记
#include <stdio.h>
int main(void)
{
    printf("%x %X %#x\n", 31, 31, 31);
    printf("**%d**% d**% d**\n", 42, 42, -42);
    printf("**%5d**%5.3d**%05d**%05.3d**\n", 6, 6, 6, 6);
    
    return 0;
}
﻿//410字符串格式.c -- 字符串格式
#include <stdio.h>
#define 导语 "Hello World!"
int main(void)
{
    printf("[%2s]\n", 导语);
    printf("[%24s]\n", 导语);
    printf("[%24.5s]\n", 导语);
    printf("[%-24.5s]\n", 导语);
    return 0;
}
﻿//411不匹配的整数转换.c -- 一些不匹配的整型转换
#include <stdio.h>
#define 页 336
#define 字 65618
int main(void)
{
    short 号码 = 页;
    short 我的号码 = -页;
    
    printf("号码为short短整数和无符号短整数unsigned short：%hd %hu\n", 号码,
           号码);
    printf("-号码为short短整数和无符号短整数unsigned short：%hd %hu\n", 我的号码,
           我的号码);
    printf("号码为int整数和字符char：%d %c\n", 号码, 号码);
    printf("字为整数int，short短整数和字符char：%d %hd %c\n",
           字, 字, 字);
    return 0;
}
﻿//412不匹配的浮点数转换.c -- 不匹配的浮点型转换
#include <stdio.h>
int main(void)
{
    float 低浮点 = 3.0;
    double 高浮点 = 3.0;
    long 长整数1 = 2000000000;
    long 长整数2 = 1234567890;
    
    printf("%.1e %.1e %.1e %.1e\n", 低浮点, 高浮点, 长整数1, 长整数2);
    printf("%ld %ld\n", 长整数1, 长整数2);
    printf("%ld %ld %ld %ld\n", 低浮点, 高浮点, 长整数1, 长整数2);
    
    return 0;
}
﻿//413打印函数的返回值.c -- printf()格式化打印函数的返回值
#include <stdio.h>
int main(void)
{
    int 沸点 = 212;
    int 重复;
    
    重复 = printf("%d F是水的沸点。\n", 沸点);
    printf("printf()函数打印%d个字符。\n",
           重复);
    return 0;
}
﻿//414打印长字符串.c –– 打印较长的字符串
#include <stdio.h>
int main(void)
{
    printf("这是一种打印");
    printf("长字符串方法。\n");
    printf("这是另一种打印\
长字符串方法。\n");
    //ANSI C
    printf("这是最新的打印"
           "长字符串方法。\n");
    
    return 0;
}
﻿//415何时使用&指针.c -- 何时使用&
#include <stdio.h>
int main(void)
{
	//变量
    int 年龄;
    //变量
    float 资产;
    //字符数组，用于储存字符串
    char 宠物[30];
    
    printf("输入你的年龄，资产和最喜欢的宠物。\n");
    //这里要使用&
    scanf("%d %f", &年龄, &资产);
    //字符数组不使用&
    scanf("%s", 宠物);
    printf("年龄：%d \n资产：$%.2f \n宠物：%s\n", 年龄, 资产, 宠物);
    
    return 0;
}
﻿//416使用变宽输出字段.c -- 使用变宽输出字段
#include <stdio.h>
int main(void)
{
    unsigned 宽度, 精度;
    int 号码 = 256;
    double 重量 = 242.5;
    
    printf("输入字段宽度：\n");
    scanf("%d", &宽度);
    printf("号码是：%*d:\n", 宽度, 号码);
    printf("现在输入宽度和精度：\n");
    scanf("%d %d", &宽度, &精度);
    printf("重量 = %*.*f\n", 宽度, 精度, 重量);
    printf("完成！\n");
    
    return 0;
}
﻿//417跳过输入中的前两个整数.c -- 跳过输入中的前两个整数
#include <stdio.h>
int main(void)
{
    int 整数;
    
    printf("请输入三个整数：\n");
    scanf("%*d %*d %d", &整数);
    printf("最后一个整数是%d\n", 整数);
    
    return 0;
}
第四章：关键概念
C语言用char类型表示单个字符，用字符串表示字符序列。字符常量是一种字符串形式，即用双引号把字符括起来："祝你好运，我的朋友"。可以把字符串储存在字符数组（由内存中相邻的字节组成）中。字符串，无论是表示成字符常量还是储存在字符数组中，都以一个叫做空字符的隐藏字符结尾。
在程序中，最好用#define 定义数值常量，用 const 关键字声明的变量为只读变量。在程序中使用符号常量（明示常量），提高了程序的可读性和可维护性。 
C 语言的标准输入函数（scanf()）和标准输出函数（printf()）都使用一种系统。在该系统中，第1个参数中的转换说明必须与后续参数中的值相匹配。例如，int转换说明%d与一个浮点值匹配会产生奇怪的结果。必须格外小心，确保转换说明的数量和类型与函数的其余参数相匹配。对于scanf()，一定要记得在变量名前加上地址运算符（&）。
空白字符（制表符、空格和换行符）在 scanf()处理输入时起着至关重要的作用。除了%c 模式（读取下一个字符），scanf()在读取输入时会跳过非空白字符前的所有空白字符，然后一直读取字符，直至遇到空白字符或与正在读取字符不匹配的字符。考虑一下，如果scanf()根据不同的转换说明读取相同的输入行，会发生什么情况。假设有如下输入行：
-13.45e12# 0
如果其对应的转换说明是%d，scanf()会读取3个字符（-13）并停在小数点处，小数点将被留在输入中作为下一次输入的首字符。如果其对应的转换说明是%f，scanf()会读取-13.45e12，并停在#符号处，而#将被留在输入中作为下一次输入的首字符；然后，scanf()把读取的字符序列-13.45e12转换成相应的浮点值，并储存在float类型的目标变量中。如果其对应的转换说明是%s，scanf()会读取-13.45e12#，并停在空格处，空格将被留在输入中作为下一次输入的首字符；然后，scanf()把这 10个字符的字符码储存在目标字符数组中，并在末尾加上一个空字符。如果其对应的转换说明是%c，scanf()只会读取并储存第1个字符，该例中是一个空格 [4]。


第四章：小结
字符串是一系列被视为一个处理单元的字符。在C语言中，字符串是以空字符（ASCII码是0）结尾的一系列字符。可以把字符串储存在字符数组中。数组是一系列同类型的项或元素。下面声明了一个名为name、有30个char类型元素的数组：
char name[30];
要确保有足够多的元素来储存整个字符串（包括空字符）。
字符串常量是用双引号括起来的字符序列，如："这是一个例子的一个字符串"。
scanf()函数（声明在string.h头文件中）可用于获得字符串的长度（末尾的空字符不计算在内）。scanf()函数中的转换说明是%s时，可读取一个单词。
C预处理器为预处理器指令（以#符号开始）查找源代码程序，并在开始编译程序之前处理它们。处理器根据#include指令把另一个文件中的内容添加到该指令所在的位置。#define指令可以创建明示常量（符号常量），即代表常量的符号。limits.h和float.h头文件用#define定义了一组表示整型和浮点型不同属性的符号常量。另外，还可以使用const限定符创建定义后就不能修改的变量。
printf()和scanf()函数对输入和输出提供
多种支持。两个函数都使用格式字符串，其中包含的转换说明表明待读取或待打印数据项的数量和类型。另外，可以使用转换说明控制输出的外观：字段宽度、小数位和字段内的布局。

第四章：复习题
复习题的参考答案在附录A中。 
1.再次运行程序清单 4.1，但是在要求输入名时，请输入名和姓（根据英文书写习惯，名和姓中间有一个空格），看看会发生什么情况？为什么？
2.假设下列示例都是完整程序中的一部分，它们打印的结果分别是什么？
a.printf("他出售的绘画为 $%2.2f.\n", 2.345e2);
b.printf("%c%c%c\n", 'H', 105, '\41');
c.#define Q "他的哈姆雷特是有趣的不被庸俗。"printf("%s\n有 %d
字符。\n", Q, strlen(Q));
d.printf("%2.2e与%2.2f一样？\n", 1201.0, 1201.0);

3.在第2题的c中，要输出包含双引号的字符串Q，应如何修改？
4.找出下面程序中的错误。
define B booboo
define X 10
main(int)
{
int 年龄;
char 名称;
printf("请输入您的第一个名称。"); 
scanf("%s", 名称);
printf("所有权利，%c，什么是您的年龄？\n", 名称);
scanf("%f", 年龄);
xp = 年龄 + X;
printf("这是一个%s！您必须至少%d。\n", B, xp);
rerun 0;
}

5.假设一个程序的开头是这样：
#define 书 "战争与和平"
int main(void)
{
float 成本 =12.99;
float 百分比 = 80.0;
请构造一个使用书、成本和百分比的printf()语句，打印以下内容：
这本书“战争与和平”销售为$12.99。
这80％的列表中。

6.打印下列各项内容要分别使用什么转换说明？
a.一个字段宽度与位数相同的十进制整数
b.一个形如8A、字段宽度为4的十六进制整数
 
c.一个形如232.346、字段宽度为10的浮点数
d.一个形如2.33e+002、字段宽度为12的浮点数
e.一个字段宽度为30、左对齐的字符串

7.打印下面各项内容要分别使用什么转换说明？
a.字段宽度为15的unsigned long类型的整数
b.一个形如0x8a、字段宽度为4的十六进制整数
c.一个形如2.33E+02、字段宽度为12、左对齐的浮点数
d.一个形如+232.346、字段宽度为10的浮点数
e.一个字段宽度为8的字符串的前8个字符

8.打印下面各项内容要分别使用什么转换说明？
a.一个字段宽度为6、最少有4位数字的十进制整数
b.一个在参数列表中给定字段宽度的八进制整数
c.一个字段宽度为2的字符
d.一个形如+3.13、字段宽度等于数字中字符数的浮点数
e.一个字段宽度为7、左对齐字符串中的前5个字符

9.分别写出读取下列各输入行的scanf()语句，并声明语句中用到变量和
数组。
a.101
b.22.32 8.34E−09
 
c.意大利细面条
d.捕捉 22
e.捕捉 22（但是跳过捕捉）

10.什么是空白？
11.下面的语句有什么问题？如何修正？
printf("高浮点类型是%z字节为单位..\n", sizeof(double));

12.假设要在程序中用圆括号代替花括号，以下方法是否可行？
#define ( {
#define ) }
 
A.4 第4章复习题答案 
1.程序不能正常运行。第1 个scanf()语句只读取用户输入的名，而用户
输入的姓仍留在输入缓冲区中（缓冲区是用于储存输入的临时存储区）。下
一条scang()语句在输入缓冲区查找重量时，从上次读入结束的地方开始读
取。这样就把留在缓冲区的姓作为体重来读取，导致 scanf()读取失败。另一
方面，如果在要求输入姓名时输入Lasha 144，那么程序会把144作为用户的
体重（虽然用户是在程序提示输入体重之前输入了144）。
2.a.他以234.50美元售出了这幅画。
b.嗨！（注意，第1个字符是字符常量；第2个字符由十进制整数转换而
来；第3个字符是八进制字符常量的ASCII表示）
c.他的哈姆雷特很有趣，没有低俗。有42个角色。
d.1.20e + 003与1201.00相同吗？
3.在这条语句中使用\"：printf("\"%s\"\n有 %d 字符。\n", Q, strlen(Q));
4.下面是修改后的程序：
#include <stdio.h>
/* 别忘了要包含合适的头文件 */
#define B "嘘嘘" 
/* 添加#、双引号 */
#define X 10 
/* 添加# */
int main(void) 
/* 不是main(int) */
{
int age;
int xp; 
/* 声明所有的变量 */
char name[40]; 
/* 把name声明为数组 */
 
printf("请输入您的名字。\n"); 
/* 添加\n，提高可读性 */
scanf("%s", name);
printf("好，%s，你的年龄是多少？\n", name); 
/* %s用于打印字符串*/
scanf("%d", &age); 
/* 把%f改成%d，把age改成&age */
xp = age + X;
printf("这是%s！您必须至少%d。\n", B, xp);
return 0; 
/* 不是rerun */
}
5.记住，要打印%必须用%%：
printf("这份副本 \"%s\" 出售 $%0.2f.\n", 书, 折扣);
printf("那是 %0.0f%% 列表。\n", 百分比);
6.a.%d
b.%4X
c.%10.3f
d.%12.2e
e.%-30s
7.a.%15lu
b.%#4x
c.%-12.2E 
d.%+10.3f
e.%8.8s
8.a.%6.4d
b.%*o
c.%2c
d.%+0.2f
e.%-7.5s
9.
a.
int 斑点狗;
scanf("%d", &斑点狗);
b.
float 公斤, 分享;
scanf("%f%f", &公斤, &分享);
（注意：对于本题的输入，可以使用转换字符e、f和g。另外，除了%c
之外，在%和转换字符之间加空格不会影响最终的结果）
c.
char 意大利面[20];
scanf("%s", 意大利面);
d.
char 行动[20];
int 值;
scanf("%s %d", 行动, &值);
e.
int 值;
 
scanf("%*s %d", &值);
10.空白包括空格、制表符和换行符。C 语言使用空白分隔记号。scanf()
使用空白分隔连续的输入项。
11.%z 中的 z 是修饰符，不是转换字符，所以要在修饰符后面加上一个
它修饰的转换字符。可以使用%zd打印十进制数，或用不同的说明符打印不
同进制的数，例如，%zx打印十六进制的数。
12.可以分别把(和)替换成{和}。但是预处理器无法区分哪些圆括号应替
换成花括号，哪些圆括号不能替换成花括号。因此，
#define ( {
#define ) }
int main(void)
(
printf("大家好！\n");
)
将变成：
int main{void}
{
printf{"大家好！\n"};
}

第四章：编程练习
1.编写一个程序，提示用户输入名和姓，然后以“名,姓”的格式打印出
来。
2.编写一个程序，提示用户输入名和姓，并执行一下操作：
a.打印名和姓，包括双引号；
b.在宽度为20的字段右端打印名和姓，包括双引号；
c.在宽度为20的字段左端打印名和姓，包括双引号；
d.在比姓名宽度宽3的字段中打印名和姓。

3.编写一个程序，读取一个浮点数，首先以小数点记数法打印，然后以
指数记数法打印。用下面的格式进行输出（系统不同，指数记数法显示的位
数可能不同）：
a.输入21.3或2.1e+001；
b.输入+21.290或2.129E+001；

4.编写一个程序，提示用户输入身高（单位：英寸）和姓名，然后以下
面的格式显示用户刚输入的信息：
达布尼，你是6.208英尺高
使用float类型，并用/作为除号。如果你愿意，可以要求用户以厘米为
单位输入身高，并以米为单位显示出来。

5.编写一个程序，提示用户输入以兆位每秒（Mb/s）为单位的下载速度
和以兆字节（MB）为单位的文件大小。程序中应计算文件的下载时间。注
意，这里1字节等于8位。使用float类型，并用/作为除号。该程序要以下面
的格式打印 3 个变量的值（下载速度、文件大小和下载时间），显示小数点 后面两位数字：
在18.12兆位每秒，一个文件2.20兆字节为单位下载在0.97秒。

6.编写一个程序，先提示用户输入名，然后提示用户输入姓。在一行打
印用户输入的名和姓，下一行分别打印名和姓的字母数。字母数要与相应名
和姓的结尾对齐，如下所示：
梅利莎 蜜蜂
    7   8
接下来，再打印相同的信息，但是字母个数与相应名和姓的开头对齐，
如下所示：
梅利莎 蜜蜂
7     8 

7.编写一个程序，将一个double类型的变量设置为1.0/3.0，一个float类型的变量设置为1.0/3.0。分别显示两次计算的结果各3次：一次显示小数点后面6位数字；一次显示小数点后面12位数字；一次显示小数点后面16位数字。程序中要包含float.h头文件，并显示FLT_DIG和DBL_DIG的值。1.0/3.0的值与这些值一致吗？
8.编写一个程序，提示用户输入旅行的里程和消耗的汽油量。然后计算并显示消耗每加仑汽油行驶的英里数，显示小数点后面一位数字。接下来，使用1加仑大约3.785升，1英里大约为1.609千米，把单位是英里/加仑的值转换为升/100公里（欧洲通用的燃料消耗表示法），并显示结果，显示小数点后面 1 位数字。注意，美国采用的方案测量消耗单位燃料的行程（值越大越好），而欧洲则采用单位距离消耗的燃料测量方案（值越低越好）。使用#define 创建符号常量或使用 const 限定符创建变量来表示两个转换系数。

第四章：编程练习参考答案
  
//编程练习 4-1
#include <stdio.h>
int main(void)
{
char 名字[40];
char 姓氏[40];
printf("输入您的名字： ");
scanf("%s", 名字);
printf("输入你的姓氏： ");
scanf("%s", 姓氏);
printf("%s, %s\n", 姓氏, 名字);
return 0;
}
  
//编程练习 4-4
#include <stdio.h>
int main(void)
{
float 高度;
char 名称[40];
printf("以英寸输入你的身高：");
scanf("%f", &高度);
printf("输入你的名字：");
scanf("%s", 名称);
printf("%s，你身高%.3f厘米\n", 名称, 高度 / 12.0);
return 0;
}
  
//编程练习 4-7
#include <stdio.h>
#include <float.h>
int main(void)
{
float 低浮点八进制 = 1.0 / 3.0;
double 高浮点八进制 = 1.0 / 3.0;
printf("低浮点值：");
printf("%.4f %.12f %.16f\n", 低浮点八进制, 低浮点八进制, 低浮点八进制);
printf("高浮点值：");
printf("%.4f %.12f %.16f\n", 高浮点八进制, 高浮点八进制, 高浮点八进制);
printf("低浮点FLT_DIG: %d\n", FLT_DIG);
printf("高浮点DBL_DIG: %d\n", DBL_DIG);
return 0;
}